---
export const prerender = false;

import DashboardLayout from "../../layouts/DashboardLayout.astro";
import { supabase } from '../../lib/supabaseClient';

// Funci칩n para obtener datos de ventas por per칤odo
async function getVentasPorPeriodo(dias: number) {
  const fechaInicio = new Date();
  fechaInicio.setDate(fechaInicio.getDate() - dias);
  
  const { data } = await supabase
    .from('pedidos')
    .select('created_at, precio_total, status, cliente_email, producto_id')
    .gte('created_at', fechaInicio.toISOString())
    .in('status', ['pagado', 'enviado', 'entregado'])
    .order('created_at', { ascending: false });
    
  return data || [];
}

// Funci칩n para obtener productos m치s vendidos con detalles
async function getProductosMasVendidos(limite: number = 10) {
  const { data } = await supabase
    .from('pedidos')
    .select(`
      producto_id,
      productos(name, price, stock, image_url)
    `)
    .in('status', ['pagado', 'enviado', 'entregado'])
    .not('producto_id', 'is', null);
    
  if (!data) return [];
  
  // Agrupar por producto
  const productosMap = new Map();
  data.forEach(pedido => {
    const producto = Array.isArray(pedido.productos) ? pedido.productos[0] : pedido.productos;
    if (producto) {
      const key = pedido.producto_id;
      if (productosMap.has(key)) {
        productosMap.get(key).ventas += 1;
        productosMap.get(key).ingresos += producto.price || 0;
      } else {
        productosMap.set(key, {
          ...producto,
          id: key,
          ventas: 1,
          ingresos: producto.price || 0
        });
      }
    }
  });
  
  return Array.from(productosMap.values())
    .sort((a, b) => b.ventas - a.ventas)
    .slice(0, limite);
}

// Funci칩n para obtener estad칤sticas de clientes
async function getEstadisticasClientes() {
  const { data } = await supabase
    .from('pedidos')
    .select('cliente_email, precio_total, created_at, status')
    .not('cliente_email', 'is', null);
    
  if (!data) return { totalClientes: 0, clientesRecurrentes: 0, promedioCompras: 0, topClientes: [] };
  
  const clientesMap = new Map();
  
  data.forEach(pedido => {
    const email = pedido.cliente_email;
    if (clientesMap.has(email)) {
      clientesMap.get(email).pedidos += 1;
      if (['pagado', 'enviado', 'entregado'].includes(pedido.status)) {
        clientesMap.get(email).total += parseFloat(pedido.precio_total) || 0;
      }
    } else {
      clientesMap.set(email, {
        email,
        pedidos: 1,
        total: ['pagado', 'enviado', 'entregado'].includes(pedido.status) ? 
               parseFloat(pedido.precio_total) || 0 : 0,
        ultimaCompra: pedido.created_at
      });
    }
  });
  
  const clientes = Array.from(clientesMap.values());
  
  return {
    totalClientes: clientes.length,
    clientesRecurrentes: clientes.filter(c => c.pedidos > 1).length,
    promedioCompras: clientes.length > 0 ? 
      clientes.reduce((sum, c) => sum + c.total, 0) / clientes.length : 0,
    topClientes: clientes
      .sort((a, b) => b.total - a.total)
      .slice(0, 10)
  };
}

// Obtener el per칤odo seleccionado (por defecto 30 d칤as)
const url = new URL(Astro.request.url);
const periodo = parseInt(url.searchParams.get('periodo') || '30');

// Obtener todos los datos
const [ventasPeriodo, productosMasVendidos, estadisticasClientes] = await Promise.all([
  getVentasPorPeriodo(periodo),
  getProductosMasVendidos(),
  getEstadisticasClientes()
]);

// Calcular m칠tricas del per칤odo
const ingresosPeriodo = ventasPeriodo.reduce((sum, v) => sum + (parseFloat(v.precio_total) || 0), 0);
const ventasPorDia = ventasPeriodo.reduce((acc, venta) => {
  const fecha = new Date(venta.created_at).toISOString().split('T')[0];
  acc[fecha] = (acc[fecha] || 0) + (parseFloat(venta.precio_total) || 0);
  return acc;
}, {} as Record<string, number>);

// Preparar datos para gr치ficos
const fechas = Object.keys(ventasPorDia).sort();
const chartDataReportes = {
  fechas: fechas.map(f => new Date(f).toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit' })),
  ventas: fechas.map(f => ventasPorDia[f]),
  productos: productosMasVendidos.slice(0, 8).map(p => ({
    nombre: p.name?.substring(0, 20) + (p.name?.length > 20 ? '...' : ''),
    ventas: p.ventas,
    ingresos: p.ingresos
  }))
};

function formatPrice(price: number) {
  return new Intl.NumberFormat('es-CO', {
    style: 'currency',
    currency: 'COP'
  }).format(price);
}

function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<DashboardLayout title="Reportes Avanzados">
  <div class="min-h-screen bg-gray-50 py-6">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      
      <!-- Header con filtros -->
      <div class="mb-8">
        <div class="sm:flex sm:items-center sm:justify-between">
          <div>
            <h1 class="text-3xl font-bold text-gray-900">游늵 Reportes Avanzados</h1>
            <p class="mt-2 text-gray-600">An치lisis detallado de ventas, productos y clientes</p>
          </div>
          
          <!-- Filtro de per칤odo -->
          <div class="mt-4 sm:mt-0">
            <select 
              id="filtro-periodo" 
              class="bg-white border border-gray-300 rounded-lg px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              onchange="window.location.href = '/admin/reportes?periodo=' + this.value"
            >
              <option value="7" selected={periodo === 7}>칔ltimos 7 d칤as</option>
              <option value="30" selected={periodo === 30}>칔ltimos 30 d칤as</option>
              <option value="90" selected={periodo === 90}>칔ltimos 90 d칤as</option>
              <option value="365" selected={periodo === 365}>칔ltimo a침o</option>
            </select>
          </div>
        </div>
      </div>

      <!-- M칠tricas principales -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white overflow-hidden shadow-lg rounded-lg border-l-4 border-blue-500">
          <div class="p-6">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                  <span class="text-blue-600 font-bold text-lg">游눯</span>
                </div>
              </div>
              <div class="ml-4 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 truncate">Ingresos del Per칤odo</dt>
                  <dd class="text-2xl font-bold text-gray-900">{formatPrice(ingresosPeriodo)}</dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div class="bg-white overflow-hidden shadow-lg rounded-lg border-l-4 border-green-500">
          <div class="p-6">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                  <span class="text-green-600 font-bold text-lg">游닍</span>
                </div>
              </div>
              <div class="ml-4 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 truncate">Pedidos Completados</dt>
                  <dd class="text-2xl font-bold text-gray-900">{ventasPeriodo.length}</dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div class="bg-white overflow-hidden shadow-lg rounded-lg border-l-4 border-purple-500">
          <div class="p-6">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center">
                  <span class="text-purple-600 font-bold text-lg">游논</span>
                </div>
              </div>
              <div class="ml-4 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 truncate">Clientes 칔nicos</dt>
                  <dd class="text-2xl font-bold text-gray-900">{estadisticasClientes.totalClientes}</dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div class="bg-white overflow-hidden shadow-lg rounded-lg border-l-4 border-orange-500">
          <div class="p-6">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center">
                  <span class="text-orange-600 font-bold text-lg">游늳</span>
                </div>
              </div>
              <div class="ml-4 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 truncate">Ticket Promedio</dt>
                  <dd class="text-2xl font-bold text-gray-900">
                    {formatPrice(ventasPeriodo.length > 0 ? ingresosPeriodo / ventasPeriodo.length : 0)}
                  </dd>
                </dl>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Gr치ficos -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
        <!-- Gr치fico de ventas por d칤a -->
        <div class="bg-white shadow-lg rounded-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">游늵 Ventas por D칤a</h3>
          <div class="h-64">
            <canvas id="ventasPorDiaChart"></canvas>
          </div>
        </div>

        <!-- Gr치fico de productos m치s vendidos -->
        <div class="bg-white shadow-lg rounded-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">游끥 Productos M치s Vendidos</h3>
          <div class="h-64">
            <canvas id="productosMasVendidosChart"></canvas>
          </div>
        </div>
      </div>

      <!-- Tablas detalladas -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Top productos -->
        <div class="bg-white shadow-lg rounded-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">游꿢 Top Productos</h3>
          <div class="overflow-hidden">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">#</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Producto</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ventas</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ingresos</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                {productosMasVendidos.slice(0, 10).map((producto, index) => (
                  <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                      #{index + 1}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="flex items-center">
                        {producto.image_url && (
                          <img class="h-8 w-8 rounded-full object-cover mr-3" src={producto.image_url} alt={producto.name} />
                        )}
                        <div class="text-sm font-medium text-gray-900">
                          {producto.name?.substring(0, 30)}{producto.name?.length > 30 ? '...' : ''}
                        </div>
                      </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                        {producto.ventas} unidades
                      </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-semibold text-gray-900">
                      {formatPrice(producto.ingresos)}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        <!-- Top clientes -->
        <div class="bg-white shadow-lg rounded-lg p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">游녬 Top Clientes</h3>
          <div class="space-y-4">
            {estadisticasClientes.topClientes.slice(0, 10).map((cliente, index) => (
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                <div class="flex items-center space-x-3">
                  <div class="flex-shrink-0">
                    <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                      <span class="text-blue-600 font-bold text-sm">#{index + 1}</span>
                    </div>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">{cliente.email}</p>
                    <p class="text-xs text-gray-500">{cliente.pedidos} pedidos</p>
                  </div>
                </div>
                <div class="text-right">
                  <p class="text-sm font-semibold text-gray-900">{formatPrice(cliente.total)}</p>
                  <p class="text-xs text-gray-500">{formatDate(cliente.ultimaCompra)}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <!-- Estad칤sticas adicionales -->
      <div class="mt-8 grid grid-cols-1 md:grid-cols-3 gap-6">
        <div class="bg-white shadow-lg rounded-lg p-6">
          <h4 class="text-lg font-semibold text-gray-900 mb-4">游늳 An치lisis de Clientes</h4>
          <div class="space-y-3">
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Total de clientes:</span>
              <span class="text-sm font-semibold text-gray-900">{estadisticasClientes.totalClientes}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Clientes recurrentes:</span>
              <span class="text-sm font-semibold text-gray-900">{estadisticasClientes.clientesRecurrentes}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Tasa de retenci칩n:</span>
              <span class="text-sm font-semibold text-gray-900">
                {estadisticasClientes.totalClientes > 0 ? 
                  Math.round((estadisticasClientes.clientesRecurrentes / estadisticasClientes.totalClientes) * 100) : 0}%
              </span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Gasto promedio:</span>
              <span class="text-sm font-semibold text-gray-900">{formatPrice(estadisticasClientes.promedioCompras)}</span>
            </div>
          </div>
        </div>

        <div class="bg-white shadow-lg rounded-lg p-6">
          <h4 class="text-lg font-semibold text-gray-900 mb-4">游닍 Resumen de Productos</h4>
          <div class="space-y-3">
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Productos 칰nicos vendidos:</span>
              <span class="text-sm font-semibold text-gray-900">{productosMasVendidos.length}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Unidades totales:</span>
              <span class="text-sm font-semibold text-gray-900">
                {productosMasVendidos.reduce((sum, p) => sum + p.ventas, 0)}
              </span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Producto m치s vendido:</span>
              <span class="text-sm font-semibold text-gray-900">
                {productosMasVendidos[0]?.name?.substring(0, 15) || 'N/A'}
                {productosMasVendidos[0]?.name?.length > 15 ? '...' : ''}
              </span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Ventas del top:</span>
              <span class="text-sm font-semibold text-gray-900">
                {productosMasVendidos[0]?.ventas || 0} unidades
              </span>
            </div>
          </div>
        </div>

        <div class="bg-white shadow-lg rounded-lg p-6">
          <h4 class="text-lg font-semibold text-gray-900 mb-4">游늵 M칠tricas del Per칤odo</h4>
          <div class="space-y-3">
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Per칤odo analizado:</span>
              <span class="text-sm font-semibold text-gray-900">{periodo} d칤as</span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Ventas por d칤a:</span>
              <span class="text-sm font-semibold text-gray-900">
                {periodo > 0 ? Math.round(ventasPeriodo.length / periodo * 10) / 10 : 0}
              </span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Ingresos por d칤a:</span>
              <span class="text-sm font-semibold text-gray-900">
                {formatPrice(periodo > 0 ? ingresosPeriodo / periodo : 0)}
              </span>
            </div>
            <div class="flex justify-between">
              <span class="text-sm text-gray-600">Mejor d칤a:</span>
              <span class="text-sm font-semibold text-gray-900">
                {fechas.length > 0 ? 
                  fechas.reduce((a, b) => ventasPorDia[a] > ventasPorDia[b] ? a : b).split('-').reverse().join('/') : 
                  'N/A'
                }
              </span>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>

  <!-- Scripts para gr치ficos -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script define:vars={{ chartDataReportes }}>
    document.addEventListener('DOMContentLoaded', function() {
      // Gr치fico de ventas por d칤a
      const ctxVentas = document.getElementById('ventasPorDiaChart').getContext('2d');
      new Chart(ctxVentas, {
        type: 'line',
        data: {
          labels: chartDataReportes.fechas,
          datasets: [{
            label: 'Ingresos por d칤a',
            data: chartDataReportes.ventas,
            borderColor: '#3B82F6',
            backgroundColor: 'rgba(59, 130, 246, 0.1)',
            tension: 0.4,
            fill: true
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                callback: function(value) {
                  return new Intl.NumberFormat('es-CO', {
                    style: 'currency',
                    currency: 'COP',
                    minimumFractionDigits: 0
                  }).format(value);
                }
              }
            }
          },
          plugins: {
            legend: {
              display: false
            },
            tooltip: {
              callbacks: {
                label: function(context) {
                  return new Intl.NumberFormat('es-CO', {
                    style: 'currency',
                    currency: 'COP'
                  }).format(context.parsed.y);
                }
              }
            }
          }
        }
      });

      // Gr치fico de productos m치s vendidos
      const ctxProductos = document.getElementById('productosMasVendidosChart').getContext('2d');
      new Chart(ctxProductos, {
        type: 'bar',
        data: {
          labels: chartDataReportes.productos.map(p => p.nombre),
          datasets: [{
            label: 'Unidades vendidas',
            data: chartDataReportes.productos.map(p => p.ventas),
            backgroundColor: [
              '#EF4444', '#F97316', '#EAB308', '#22C55E',
              '#06B6D4', '#3B82F6', '#8B5CF6', '#EC4899'
            ]
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true
            }
          },
          plugins: {
            legend: {
              display: false
            }
          }
        }
      });
    });
  </script>
</DashboardLayout>
