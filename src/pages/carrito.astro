---
export const prerender = false;

import { supabase } from '../lib/supabaseClient';

// Obtener productos populares para mostrar en carrito vac√≠o
let productosRecomendados: any[] = [];

try {
  const { data } = await supabase
    .from('productos')
    .select('*')
    .order('created_at', { ascending: false })
    .limit(4);
  
  productosRecomendados = data || [];
} catch (error) {
  console.error('Error cargando productos:', error);
}

// Funci√≥n para formatear precios
function formatPrice(price: number) {
  return new Intl.NumberFormat('es-CO', {
    style: 'currency',
    currency: 'COP'
  }).format(price);
}
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Carrito de compras - TuMarca</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>
  <body class="bg-gray-50 text-gray-900">
    <!-- Header mejorado -->
    <header class="bg-white shadow-sm border-b">
      <div class="container mx-auto px-6 py-4">
        <div class="flex items-center justify-between">
          <a href="/" class="text-2xl font-bold text-purple-600">TuMarca</a>
          <nav class="flex items-center space-x-6">
            <a href="/" class="text-gray-700 hover:text-purple-600 transition-colors">Inicio</a>
            <a href="/admin/productos" class="text-gray-700 hover:text-purple-600 transition-colors">Admin</a>
            <div class="relative">
              <button class="text-gray-700 hover:text-purple-600">
                üõí <span id="cart-badge" class="bg-red-500 text-white text-xs rounded-full px-2 py-1 ml-1 hidden">0</span>
              </button>
            </div>
          </nav>
        </div>
      </div>
    </header>

    <main class="container mx-auto px-6 py-12">
      <div class="mb-8">
        <h1 class="text-4xl font-bold mb-2">üõí Tu carrito</h1>
        <p class="text-gray-600">Revisa tus productos y procede con tu pedido</p>
      </div>

      <!-- Contenedor del carrito -->
      <div class="max-w-4xl mx-auto">
        <div id="cart-container" class="space-y-4"></div>

        <!-- Carrito vac√≠o -->
        <div id="empty-cart" class="text-center py-12 hidden">
          <div class="bg-white p-8 rounded-lg shadow-lg max-w-2xl mx-auto">
            <!-- Carrito vac√≠o -->
            <div class="mb-8">
              <div class="w-24 h-24 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                </svg>
              </div>
              <h2 class="text-2xl font-semibold text-gray-800 mb-4">Tu carrito est√° vac√≠o</h2>
              <p class="text-gray-600 mb-8">¬°Descubre nuestros productos y agrega algunos a tu carrito!</p>
              <a href="/" class="bg-purple-600 hover:bg-purple-700 text-white px-8 py-3 rounded-lg transition-colors inline-block mb-8">
                Explorar productos
              </a>
            </div>

            <!-- Productos recomendados -->
            {productosRecomendados.length > 0 && (
              <div>
                <h3 class="text-lg font-semibold text-gray-800 mb-6">Productos que podr√≠an interesarte</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {productosRecomendados.map((producto) => (
                    <div class="border rounded-lg p-4 hover:shadow-md transition-shadow">
                      {producto.images?.[0] && (
                        <img 
                          src={producto.images[0]} 
                          alt={producto.title} 
                          class="w-full h-32 object-cover rounded-lg mb-3"
                        />
                      )}
                      <h4 class="font-semibold text-gray-900 mb-2">{producto.title}</h4>
                      <p class="text-purple-600 font-bold mb-3">{formatPrice(producto.price)}</p>
                      <a 
                        href={`/producto/${producto.id}`}
                        class="w-full bg-purple-600 text-white py-2 px-4 rounded hover:bg-purple-700 transition-colors text-sm inline-block text-center"
                      >
                        Ver producto
                      </a>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>

        <!-- Resumen y acciones -->
        <div id="cart-summary" class="mt-8 hidden">
          <div class="bg-white p-6 rounded-lg shadow-lg">
            <div class="flex justify-between items-center mb-6">
              <h2 class="text-2xl font-semibold">Resumen del pedido</h2>
              <button 
                id="clear-cart"
                class="text-red-500 hover:text-red-700 text-sm underline"
              >
                Vaciar carrito
              </button>
            </div>

            <div class="border-t pt-4">
              <div class="flex justify-between items-center mb-2">
                <span class="text-gray-600">Subtotal:</span>
                <span id="cart-subtotal" class="font-semibold">$0</span>
              </div>
              <div class="flex justify-between items-center mb-2">
                <span class="text-gray-600">Env√≠o:</span>
                <span class="text-sm text-gray-500">A consultar</span>
              </div>
              <div class="border-t pt-2 flex justify-between items-center">
                <span class="text-xl font-bold">Total:</span>
                <span id="cart-total" class="text-xl font-bold text-purple-600">$0</span>
              </div>
            </div>

            <div class="mt-6 space-y-3">
              <a 
                id="whatsapp-link" 
                href="#" 
                target="_blank" 
                class="block w-full bg-green-600 hover:bg-green-700 text-white py-3 px-6 rounded-lg transition-colors text-center font-semibold"
              >
                üì± Continuar por WhatsApp
              </a>
              
              <button 
                id="checkout-btn" 
                class="w-full bg-purple-600 hover:bg-purple-700 text-white py-3 px-6 rounded-lg transition-colors font-semibold"
              >
                üí≥ Continuar al checkout
              </button>
              
              <a 
                href="/" 
                class="block w-full bg-gray-200 hover:bg-gray-300 text-gray-800 py-3 px-6 rounded-lg transition-colors text-center"
              >
                ‚Üê Seguir comprando
              </a>
            </div>
          </div>
        </div>
      </div>
    </main>

    <script define:vars={{ productosRecomendados }}>
      // üõí Sistema de carrito mejorado
      
      // Obtener carrito del localStorage
      function getCart() {
        try {
          const cart = localStorage.getItem('cart');
          return cart ? JSON.parse(cart) : [];
        } catch (error) {
          console.error('Error obteniendo carrito:', error);
          return [];
        }
      }

      // Guardar carrito en localStorage
      function saveCart(cart) {
        try {
          localStorage.setItem('cart', JSON.stringify(cart));
          updateCartBadge();
        } catch (error) {
          console.error('Error guardando carrito:', error);
        }
      }

      // Actualizar badge del carrito
      function updateCartBadge() {
        const cart = getCart();
        const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
        const badge = document.getElementById('cart-badge');
        if (badge) {
          badge.textContent = totalItems;
          badge.style.display = totalItems > 0 ? 'inline' : 'none';
        }
      }

      // Formatear precio
      function formatPrice(price) {
        return new Intl.NumberFormat('es-CO', {
          style: 'currency',
          currency: 'COP',
          minimumFractionDigits: 0,
          maximumFractionDigits: 0
        }).format(price);
      }

      // Eliminar producto del carrito - FIX
      function removeFromCart(productId) {
        console.log('üóëÔ∏è Eliminando producto ID:', productId);
        const cart = getCart();
        console.log('üì¶ Carrito antes:', cart.map(item => ({ id: item.id, title: item.title })));
        
        // Convertir ambos IDs a string para comparaci√≥n segura
        const updatedCart = cart.filter(item => String(item.id) !== String(productId));
        
        console.log('üì¶ Carrito despu√©s:', updatedCart.map(item => ({ id: item.id, title: item.title })));
        console.log(`‚úÖ Productos eliminados: ${cart.length - updatedCart.length}`);
        
        saveCart(updatedCart);
        renderCart();
        showNotification('Producto eliminado del carrito', 'info');
      }

      // Actualizar cantidad de producto
      function updateQuantity(productId, newQuantity) {
        newQuantity = parseInt(newQuantity);
        console.log(`üîÑ Actualizando cantidad: ${productId} -> ${newQuantity}`);
        
        if (newQuantity < 1) {
          removeFromCart(productId);
          return;
        }

        const cart = getCart();
        const item = cart.find(item => String(item.id) === String(productId));
        if (item) {
          item.quantity = newQuantity;
          saveCart(cart);
          renderCart();
          console.log(`‚úÖ Cantidad actualizada: ${item.title} -> ${newQuantity}`);
        }
      }

      // Mostrar notificaci√≥n
      function showNotification(message, type) {
        type = type || 'success';
        const notification = document.createElement('div');
        notification.className = `fixed top-4 right-4 p-4 rounded-lg text-white z-50 transition-all duration-300 ${
          type === 'success' ? 'bg-green-500' : 
          type === 'error' ? 'bg-red-500' : 'bg-blue-500'
        }`;
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
          notification.style.transform = 'translateX(100%)';
          setTimeout(() => {
            if (document.body.contains(notification)) {
              document.body.removeChild(notification);
            }
          }, 300);
        }, 3000);
      }

      // Renderizar carrito
      function renderCart() {
        const cart = getCart();
        const cartContainer = document.getElementById('cart-container');
        const emptyCart = document.getElementById('empty-cart');
        const summary = document.getElementById('cart-summary');

        console.log('üé® Renderizando carrito con', cart.length, 'productos');

        if (cart.length === 0) {
          if (cartContainer) cartContainer.innerHTML = '';
          if (emptyCart) emptyCart.classList.remove('hidden');
          if (summary) summary.classList.add('hidden');
          return;
        }

        if (emptyCart) emptyCart.classList.add('hidden');
        if (summary) summary.classList.remove('hidden');

        // Renderizar items del carrito
        if (cartContainer) {
          cartContainer.innerHTML = cart.map(item => `
            <div class="bg-white p-6 rounded-lg shadow-lg hover:shadow-xl transition-shadow">
              <div class="flex items-start space-x-4">
                ${item.image || (item.images && item.images[0]) ? `
                  <img 
                    src="${item.image || item.images[0]}" 
                    alt="${item.title}" 
                    class="w-24 h-24 object-cover rounded-lg flex-shrink-0"
                    onerror="this.parentElement.innerHTML='<div class=\\'w-24 h-24 bg-gray-200 rounded-lg flex items-center justify-center flex-shrink-0\\'>üì∑</div>'"
                  >
                ` : `
                  <div class="w-24 h-24 bg-gray-200 rounded-lg flex items-center justify-center flex-shrink-0">
                    üì∑
                  </div>
                `}
                
                <div class="flex-1">
                  <h3 class="text-lg font-semibold text-gray-900 mb-2">${item.title}</h3>
                  <p class="text-purple-600 font-bold text-lg mb-2">${formatPrice(item.price)}</p>
                  ${item.sku ? `<p class="text-sm text-gray-500 mb-2">SKU: ${item.sku}</p>` : ''}
                  
                  <!-- Controles de cantidad -->
                  <div class="flex items-center space-x-3">
                    <span class="text-sm text-gray-600">Cantidad:</span>
                    <button 
                      onclick="updateQuantity('${item.id}', ${item.quantity - 1})"
                      class="w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-full flex items-center justify-center transition-colors"
                      ${item.quantity <= 1 ? 'title="Eliminar producto"' : ''}
                    >
                      ${item.quantity <= 1 ? 'üóëÔ∏è' : '‚àí'}
                    </button>
                    
                    <input 
                      type="number" 
                      value="${item.quantity}" 
                      min="1" 
                      max="99"
                      class="w-16 text-center border border-gray-300 rounded px-2 py-1 focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                      onchange="updateQuantity('${item.id}', this.value)"
                    />
                    
                    <button 
                      onclick="updateQuantity('${item.id}', ${item.quantity + 1})"
                      class="w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-full flex items-center justify-center transition-colors"
                    >
                      +
                    </button>
                  </div>
                </div>

                <!-- Total del item -->
                <div class="text-right">
                  <p class="text-xl font-bold text-gray-900 mb-2">${formatPrice(item.price * item.quantity)}</p>
                  <button 
                    onclick="removeFromCart('${item.id}')"
                    class="text-red-500 hover:text-red-700 text-sm font-medium underline"
                  >
                    Eliminar
                  </button>
                </div>
              </div>
            </div>
          `).join('');
        }

        // Actualizar totales
        const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
        
        const totalElement = document.getElementById('cart-total');
        const subtotalElement = document.getElementById('cart-subtotal');
        
        if (totalElement) totalElement.textContent = formatPrice(total);
        if (subtotalElement) subtotalElement.textContent = formatPrice(total);

        // Actualizar enlace de WhatsApp
        updateWhatsAppLink(cart, total);
      }

      // Actualizar enlace de WhatsApp
      function updateWhatsAppLink(cart, total) {
        const whatsappLink = document.getElementById('whatsapp-link');
        if (!whatsappLink) return;
        
        let message = "üõí *Carrito de Compras - TuMarca*\\n\\n";
        
        cart.forEach((item, index) => {
          message += `${index + 1}. *${item.title}*\\n`;
          message += `   ‚îî Cantidad: ${item.quantity}\\n`;
          message += `   ‚îî Precio: ${formatPrice(item.price)}\\n`;
          message += `   ‚îî Subtotal: ${formatPrice(item.price * item.quantity)}\\n\\n`;
        });
        
        message += `üí∞ *Total: ${formatPrice(total)}*\\n\\n`;
        message += "¬°Hola! Me interesan estos productos. ¬øPodr√≠an confirmar disponibilidad y darme informaci√≥n sobre el proceso de compra y env√≠o?";
        
        const encodedMessage = encodeURIComponent(message);
        const phoneNumber = "573053947290"; // Tu n√∫mero de WhatsApp
        
        whatsappLink.href = `https://wa.me/${phoneNumber}?text=${encodedMessage}`;
      }

      // Vaciar carrito
      function clearCart() {
        if (confirm('¬øEst√°s seguro de que quieres vaciar tu carrito?')) {
          saveCart([]);
          renderCart();
          showNotification('Carrito vaciado', 'info');
        }
      }

      // Checkout - redirigir a p√°gina de checkout
      function proceedToCheckout() {
        const cart = getCart();
        if (cart.length === 0) {
          showNotification('Tu carrito est√° vac√≠o', 'error');
          return;
        }
        
        console.log('üõí Redirigiendo a checkout con', cart.length, 'productos');
        window.location.href = '/checkout';
      }

      // Inicializar cuando el DOM est√© listo
      document.addEventListener('DOMContentLoaded', function() {
        console.log('üöÄ Inicializando carrito...');
        renderCart();
        updateCartBadge();
        
        // Event listeners
        const clearButton = document.getElementById('clear-cart');
        if (clearButton) {
          clearButton.addEventListener('click', clearCart);
        }

        const checkoutBtn = document.getElementById('checkout-btn');
        if (checkoutBtn) {
          checkoutBtn.addEventListener('click', proceedToCheckout);
        }

        // Debug info
        const cart = getCart();
        console.log(`üõí Carrito cargado: ${cart.length} tipos de productos`);
        if (cart.length > 0) {
          console.log('Productos en carrito:', cart.map(item => ({ id: item.id, title: item.title, qty: item.quantity })));
        }
      });

      // Hacer funciones globales para onclick
      window.updateQuantity = updateQuantity;
      window.removeFromCart = removeFromCart;
      window.clearCart = clearCart;
    </script>
  </body>
</html>
      <h1 class="text-4xl font-bold mb-10 text-center">Tu carrito</h1>

      <div id="cart-container" class="space-y-4 max-w-2xl mx-auto"></div>

      <div id="empty-cart" class="text-center py-12 hidden">
        <div class="bg-white p-8 rounded-lg shadow-lg max-w-2xl mx-auto">
          <!-- Carrito vac√≠o -->
          <div class="mb-8">
            <div class="w-24 h-24 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center">
              <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
              </svg>
            </div>
            <h2 class="text-2xl font-semibold text-gray-800 mb-4">Tu carrito est√° vac√≠o</h2>
            <p class="text-gray-600 mb-8">¬°Descubre nuestros productos y agrega algunos a tu carrito!</p>
            <a href="/" class="bg-purple-600 hover:bg-purple-700 text-white px-8 py-3 rounded-lg transition-colors inline-block mb-8">
              Explorar productos
            </a>
          </div>

          <!-- Productos recomendados -->
          {productosRecomendados.length > 0 && (
            <div>
              <h3 class="text-lg font-semibold text-gray-800 mb-6">Productos que podr√≠an interesarte</h3>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                {productosRecomendados.map((producto) => (
                  <div class="border rounded-lg p-4 hover:shadow-md transition-shadow">
                    {producto.images?.[0] && (
                      <img 
                        src={producto.images[0]} 
                        alt={producto.title} 
                        class="w-full h-32 object-cover rounded-lg mb-3"
                      />
                    )}
                    <h4 class="font-semibold text-gray-900 mb-2">{producto.title}</h4>
                    <p class="text-purple-600 font-bold mb-3">{formatPrice(producto.price)}</p>
                    <a 
                      href={`/producto/${producto.id}`}
                      class="w-full bg-purple-600 text-white py-2 px-4 rounded hover:bg-purple-700 transition-colors text-sm inline-block text-center"
                    >
                      Ver producto
                    </a>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>

      <div id="summary" class="mt-10 text-center hidden max-w-md mx-auto">
        <div class="bg-white p-6 rounded-lg shadow">
          <p class="text-2xl font-semibold mb-6">Total: $<span id="cart-total">0</span></p>
          <div class="space-y-4">
            <button 
              id="clear-cart"
              class="w-full bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded transition"
            >
              Vaciar carrito
            </button>
            <a 
              id="whatsapp-link" 
              href="#" 
              target="_blank" 
              class="block w-full bg-green-600 hover:bg-green-700 text-white py-3 px-4 rounded transition text-center"
            >
              üì± Enviar pedido por WhatsApp
            </a>
            <a 
              href="/pago" 
              class="block w-full bg-purple-600 hover:bg-purple-700 text-white py-3 px-4 rounded transition text-center"
            >
              üí≥ Pagar online
            </a>
          </div>
        </div>
      </div>
    </main>

    <script is:inline>
      // Variables globales
      let cartContainer, totalElement, summary, emptyCart, whatsappLink, clearCartBtn;

      // Inicializar elementos DOM
      function initElements() {
        cartContainer = document.getElementById("cart-container");
        totalElement = document.getElementById("cart-total");
        summary = document.getElementById("summary");
        emptyCart = document.getElementById("empty-cart");
        whatsappLink = document.getElementById("whatsapp-link");
        clearCartBtn = document.getElementById("clear-cart");
      }

      function renderCart() {
        if (!cartContainer || !totalElement || !summary || !emptyCart) return;
        
        cartContainer.innerHTML = "";
        const cartData = localStorage.getItem("cart");
        let cart = [];
        
        if (cartData) {
          try {
            cart = JSON.parse(cartData);
          } catch (e) {
            cart = [];
          }
        }

        if (cart.length === 0) {
          summary.classList.add("hidden");
          emptyCart.classList.remove("hidden");
          return;
        }

        emptyCart.classList.add("hidden");
        let total = 0;
        let mensaje = "*üõí Pedido desde la tienda online:*\n\n";

        for (let i = 0; i < cart.length; i++) {
          const item = cart[i];
          const subtotal = item.price * item.quantity;
          total += subtotal;

          mensaje += "‚Ä¢ " + item.title + "\n  Cantidad: " + item.quantity + "\n  Precio: $" + subtotal.toFixed(2) + "\n\n";

          const card = document.createElement("div");
          card.className = "bg-white p-4 rounded-lg shadow flex items-center gap-4";

          const imageUrl = (item.images && item.images.length > 0) ? item.images[0] : '/placeholder.jpg';
          
          card.innerHTML = 
            '<img src="' + imageUrl + '" alt="' + item.title + '" class="w-20 h-20 object-cover rounded" onerror="this.src=\'/placeholder.jpg\'" />' +
            '<div class="flex-1">' +
              '<h3 class="text-lg font-semibold">' + item.title + '</h3>' +
              '<p class="text-gray-600">$' + item.price + ' c/u</p>' +
              '<div class="flex items-center mt-2">' +
                '<button onclick="updateQuantity(' + i + ', -1)" class="bg-gray-200 px-2 py-1 rounded text-sm hover:bg-gray-300">-</button>' +
                '<span class="mx-3 font-semibold">' + item.quantity + '</span>' +
                '<button onclick="updateQuantity(' + i + ', 1)" class="bg-gray-200 px-2 py-1 rounded text-sm hover:bg-gray-300">+</button>' +
              '</div>' +
            '</div>' +
            '<div class="text-right">' +
              '<p class="font-bold">$' + subtotal.toFixed(2) + '</p>' +
              '<button onclick="removeItem(' + i + ')" class="text-red-500 hover:underline text-sm mt-1">Eliminar</button>' +
            '</div>';

          cartContainer.appendChild(card);
        }

        totalElement.textContent = total.toFixed(2);
        summary.classList.remove("hidden");

        // Configurar enlace de WhatsApp
        const numeroWpp = "573053947290";
        const mensajeFinal = encodeURIComponent(mensaje + "*üí∞ Total: $" + total.toFixed(2) + "*\n\n¬øConfirmas el pedido?");
        if (whatsappLink) {
          whatsappLink.href = "https://wa.me/" + numeroWpp + "?text=" + mensajeFinal;
        }
      }

      // Funciones globales para los onclick
      function updateQuantity(index, change) {
        const cartData = localStorage.getItem("cart");
        let cart = [];
        
        if (cartData) {
          try {
            cart = JSON.parse(cartData);
          } catch (e) {
            cart = [];
          }
        }
        
        if (cart[index]) {
          cart[index].quantity = Math.max(1, cart[index].quantity + change);
          localStorage.setItem("cart", JSON.stringify(cart));
          renderCart();
        }
      }

      function removeItem(index) {
        const cartData = localStorage.getItem("cart");
        let cart = [];
        
        if (cartData) {
          try {
            cart = JSON.parse(cartData);
          } catch (e) {
            cart = [];
          }
        }
        
        if (cart[index]) {
          cart.splice(index, 1);
          localStorage.setItem("cart", JSON.stringify(cart));
          renderCart();
        }
      }

      function clearCart() {
        if (confirm('¬øEst√°s seguro de que quieres vaciar el carrito?')) {
          localStorage.removeItem("cart");
          renderCart();
        }
      }

      // Hacer funciones globales
      window.updateQuantity = updateQuantity;
      window.removeItem = removeItem;
      window.clearCart = clearCart;

      // Inicializar cuando el DOM est√© listo
      document.addEventListener('DOMContentLoaded', function() {
        initElements();
        renderCart();
        
        // Event listener para vaciar carrito
        if (clearCartBtn) {
          clearCartBtn.addEventListener('click', clearCart);
        }
      });
    </script>
  </body>
</html>
